version: '3.8'

services:
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        ports:
            - 5672:5672
            - 15672:15672
    web:
        build:
            context: .
            dockerfile: Dockerfile.prod
        command:
            - /bin/sh
            - -c
            - |
              celery -A main worker -l INFO &
              gunicorn main.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/home/app/web/staticfiles/
            - media_volume:/home/app/web/media/
        expose:
            - 8000
        env_file:
            - ./.env.prod
        depends_on:
            - db
    db:
        image: postgres:14.1-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - 5432:5432
        env_file:
            - ./.env.db.prod
    nginx-proxy:
        container_name: nginx-proxy
        build: ./nginx
        restart: always
        ports:
            - 443:443
            - 80:80
        volumes:
            - static_volume:/home/app/web/staticfiles/
            - media_volume:/home/app/web/media/
            - certs:/etc/nginx/certs
            - html:/usr/share/nginx/html
            - vhost:/etc/nginx/vhost.d
            - /var/run/docker.sock:/tmp/docker.sock:ro
        depends_on:
            - web
    nginx-proxy-letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        env_file:
            - ./.env.prod.proxy-companion
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - certs:/etc/nginx/certs
            - html:/usr/share/nginx/html
            - vhost:/etc/nginx/vhost.d
            - acme:/etc/acme.sh
        depends_on:
            - nginx-proxy

volumes:
    postgres_data:
    static_volume:
    media_volume:
    certs:
    html:
    vhost:
    acme:
